{"version":3,"file":"static/js/904.cffcca2f.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAuG,wBAAvG,EAAwI,wBAAxI,EAA2K,0BAA3K,EAA+M,yB,SCMlMA,EAAU,SAACC,GAEpB,OADAC,QAAQC,IAAI,iBAAkBF,EAAMG,UAC5B,gBAAKC,UAAWC,EAAhB,SAAgCL,EAAMG,W,mBCCrCG,EAAa,SAACN,GACvB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,iBAAKJ,UAAWC,EAAe,IAAMA,EAArC,WACI,gBAAKI,IAAKC,EAAeC,IAAI,mBAC7B,UAAC,KAAD,CAASC,GAAIL,EAAb,cAAqBP,EAAMa,Y,uCCPjCC,GAAYC,EAAAA,EAAAA,GAAiB,IAgBtBC,GAAsBC,EAAAA,EAAAA,GAAmC,CAACC,KAAM,wBAA1CD,EAfiD,SAACjB,GACjF,OACI,kBAAMmB,SAAUnB,EAAMoB,aAAtB,WACI,SAACC,EAAA,EAAD,CACIC,UAAWC,EAAAA,GACXV,KAAK,iBACLW,YAAY,uHACZC,SAAU,CAACC,EAAAA,EAAUZ,MAEzB,0BACI,oD,uCCchB,GAAea,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAACC,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACC,GACtB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAaD,SAS9BE,EAAAA,EAFJ,EC1BmD,SAACnC,GAChD,IAAIoC,EAAiBpC,EAAM8B,YAAYO,QAClCC,KAAI,SAAAC,GAAC,OAAI,SAACjC,EAAD,CAAuBO,KAAM0B,EAAE1B,KAAML,GAAI+B,EAAE/B,IAA1B+B,EAAE/B,OAC7BgC,EAAkBxC,EAAM8B,YAAYW,SACnCH,KAAI,SAAAI,GAAC,OAAI,SAAC3C,EAAD,CAAoBI,QAASuC,EAAEvC,SAAjBuC,EAAElC,OAO9B,OACI,iBAAKJ,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SAAoC+B,KACpC,0BACA,SAACpB,EAAD,CAAqBG,SATP,SAACwB,GACnB3C,EAAMgC,YAAYW,EAAOV,sBAUrB,gBAAK7B,UAAWC,EAAhB,SAAiCmC,W","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogItem/DialogsItem.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__zv6yD\",\"dialogsItem\":\"Dialogs_dialogsItem__Jb3NP\",\"active\":\"Dialogs_active__O2Bw4\",\"dialog\":\"Dialogs_dialog__h5r60\",\"messages\":\"Dialogs_messages__1yvgB\",\"message\":\"Dialogs_message__o5rpO\"};","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: MessageType) => {\r\n    console.log(\"props.message:\", props.message)\r\n    return (<div className={style.message}>{props.message}</div>)\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './../Dialogs.module.css'\r\nimport ava_dialogs_1 from \"../avatar_for_message_2.png\";\r\n\r\ntype DialogItemType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport const DialogItem = (props: DialogItemType) => {\r\n    let path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <img src={ava_dialogs_1} alt=\"ava_dialogs_1\"/>\r\n            <NavLink to={path}> {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utilts/validators/validators\";\r\n\r\ntype AddMessageFormPropsType = {\r\n    onSubmit: (newMessageBody:any) => void\r\n}\r\nconst maxLength50=maxLengthCreator(50)\r\nexport const AddMessageForm: React.FC<InjectedFormProps<AddMessageFormPropsType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"newMessageBody\"\r\n                placeholder=\"Введи текст сообщения\"\r\n                validate={[required, maxLength50]}\r\n            />\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm<AddMessageFormPropsType>({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from 'react';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {addMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {DialogsPageType} from \"../../api/api\";\r\n\r\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\r\ntype mapStateToPropsType = {\r\n    dialogsPage: DialogsPageType\r\n    //isAuth:boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    sendMessage: (newMessageBody:string) => void\r\n}\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        // isAuth:state.auth.isAuth\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessageBody:string) => {\r\n            dispatch(addMessageAC(newMessageBody))\r\n        },\r\n    }\r\n}\r\n\r\n//export const DialogsContainer = withAuthRedirect(connect(mapStateToProps, mapDispatchToProps)(Dialogs))\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogItem} from \"./DialogItem/DialogsItem\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport const Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n    let dialogsElement = props.dialogsPage.dialogs\r\n        .map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n    let messagesElement = props.dialogsPage.messages\r\n        .map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n    const addNewMessage = (values:any) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    //if (!props.isAuth) return <Redirect to={'/login'}/>\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>{dialogsElement}</div>\r\n            <div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n            <div className={style.messages}>{messagesElement}</div>\r\n        </div>\r\n    );\r\n};\r\n"],"names":["Message","props","console","log","message","className","style","DialogItem","path","id","src","ava_dialogs_1","alt","to","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","compose","connect","state","dialogsPage","dispatch","sendMessage","newMessageBody","addMessageAC","withAuthRedirect","dialogsElement","dialogs","map","d","messagesElement","messages","m","values"],"sourceRoot":""}